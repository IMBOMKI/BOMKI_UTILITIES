/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 

#include "Riostream.h" 

#include "RooPolyFitPdf.h" 
#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include <math.h> 
#include "TMath.h" 

ClassImp(RooPolyFitPdf) 

 RooPolyFitPdf::RooPolyFitPdf(const char *name, const char *title, 
                        RooAbsReal& _x,
                        RooAbsReal& _par0,
                        RooAbsReal& _par1,
                        RooAbsReal& _par2) :
   RooAbsPdf(name,title), 
   x("x","x",this,_x),
   par0("par0","par0",this,_par0),
   par1("par1","par1",this,_par1),
   par2("par2","par2",this,_par2)
 { 
 } 


 RooPolyFitPdf::RooPolyFitPdf(const RooPolyFitPdf& other, const char* name) :  
   RooAbsPdf(other,name), 
   x("x",this,other.x),
   par0("par0",this,other.par0),
   par1("par1",this,other.par1),
   par2("par2",this,other.par2)
 { 
 } 



 Double_t RooPolyFitPdf::evaluate() const 
 { 
   // ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE 
   return (par0*(TMath::Power((par2-x),par1))) ; 
 } 



